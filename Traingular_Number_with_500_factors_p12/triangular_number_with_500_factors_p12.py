__author__ = 'manasvi'
"""
The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
"""

from math import sqrt
prime_list = [2]

def is_prime(num):
    for i in range(2, int(sqrt(num)) + 1):
        if num % i == 0:
            return False
    return True

def fact_count(num):
    #populate prime list
    for i in range(prime_list[-1], int(sqrt(num) + 1)):
        if is_prime(i):
            if i not in prime_list:
                prime_list.append(i)

    prime_dict = {}
    i = 0
    while i < len(prime_list):
        prime = prime_list[i]
        while (num % prime == 0):
            if not prime in prime_dict:
                prime_dict[prime] = 1
            else:
                prime_dict[prime] += 1
            num = num / prime
        i += 1
    factor_num = 1
    for key in prime_dict.keys():
        factor_num *= prime_dict[key] + 1
    return factor_num


start = 2
while(True):
    t_num = (start*(start+1)) / 2
    fact = fact_count(t_num)
    if fact > 500:
        print t_num
        break
    start += 1